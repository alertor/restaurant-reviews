type User {
    id: ID!
    name: String
    locations(limit: Number, nextToken: String): LocationConnection
    reviews(limit: Number, nextToken: String): ReviewConnection
    favorites(limit: Number, nextToken: String): LocationConnection
}

type Location {
    id: ID!
    owner: User!
    longitude: Number
    latitude: Number
    street: String!
    city: String!
    state: String!
    country: String!
    phone: String
    email: String
    favoriteCount: Number
    averageRating: Number
    reviews(limit: Number, nextToken: String): ReviewConnection
}

type Review {
    id: ID!
    user: User!
    location: Location!
    content: String
    rating: Number
}

type UserConnection {
    items: [User]
    nextToken: String
}

type LocationConnection {
    items: [Location]
    nextToken: String
}


input UserQueryInput {
    id: ID
    name: String
}

type ReviewConnection {
    items: [Review]
    nextToken: String
}

input LocationInput {
    longitude: Number
    latitude: Number
    street: String!
    city: String!
    state: String!
    country: String!
    phone: String
    email: String
}

input GPSQueryInput {
    longitude: Number
    latitude: Number
    radius: Number
}

input LocationQueryInput {
    street: String
    city: String
    state: String
    country: String
    phone: String
    email: String
}

input ReviewInput {
    locationId: ID!
    content: String
    rating: Number
}

type Query {
    me: User
    findUser(userQuery: UserQueryInput): UserConnection
    findLocationByGPS(searchArea: GPSQueryInput): LocationConnection
    findLocationByName(locationQuery: LocationQueryInput): LocationConnection
}

type Mutation {
    addLocation(input: LocationInput): Location
    addReview(input: ReviewInput): Review
    addFavorite(locationId: ID!): Location
}

type Subscription {
    locations: Location
    @aws_subscribe(mutations: [ "addLocation". "addReview", "addFavorite" ])
    reviews(locationId: ID!): Review
    @aws_subscribe(mutations: [ "addReview" ])
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}